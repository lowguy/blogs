{
	"result":[
		{"type":1,"content":"php作为弱类型语言，她是不会强制开发者使用数据时指定其数据类型。<br/>那在数据类型处理时是如何操作的呢？"},
		{"type":4,"content":"一强制类型转换"},
		{"type":1,"content":"1用强制类型关健字<br/>（int）、（integer）：转换成整形<br/>（float）、（double）、（real）：转换成浮点型<br/>（string）：转换成字符串<br/>（bool）、（boolean）：转换成布尔类型<br/>（array）：转换成数组<br/>（object）：转换成对象<br/>（binary）：字节码<br/>示例：<br/>$num1=3.14;<br/>$num2=(int)$num1;<br/>var_dump($num1); //输出float(3.14)<br/>var_dump($num2); //输出int(3) <br/>2.类型转换函数<br/>intval()、floatval()、strval() 、settype(mixed var,string type) <br/>示例：<br/>$str=\"123.9abc\"; <br/>$int=intval($str);     //转换后数值：123 <br/>$float=floatval($str); //转换后数值：123.9 <br/>$str=strval($float);   //转换后字符串：\"123.9\"<br/>$num4=12.8;<br/>$flg=settype($num4,\"int\"); <br/>var_dump($flg);  //输出bool(true)<br/>var_dump($num4); //输出int(12)"},
		{"type":4,"content":"二自动类型转换"},
		{"type":1,"content":"+号,自动按数字运算。<br/>.号,自动按字符串运算.<br/>示例：<br/>$i=1;<br/>$a=$i.'a'; //结果1a<br/>$c=$i+'a';//结果1<br/>0==\"abc\"; //结果是true , 因为\"abc\"按转成数字参加比对"},
		{"type":2,"content":"值的类型确定数据类型\n$foo = \"0\"; // $foo is a string (ASCII 48)\n$foo++; // $foo is the string \"1\" (ASCII 49)\n$foo += 1; // $foo is now an integer (2)\n$foo = $foo + 1.3; // $foo is now a double (3.3)\n$foo = 5 + \"10 Little Piggies\"; // $foo is a double (15),因为后面的\"10。。。\"转成数据类型是10\n$foo = 5 + \"10 Small Pigs\"; // $foo is an integer (15)\n\nint,float,doblue 之间就长运算。\n$foo = 1+1.34 ; // $foo 是float "},
		{"type":4,"content":"三类型相关函数"},
		{"type":1,"content":"gettype 获得变量类型<br/>settype 指定变量类型<br/>get_resource_type 获得资源类型"},
		{"type":4,"content":"四运算符优先级"},
		{"type":1,"content":"最高优先级为一元运算符new , [ ] , ! , ~ , ++ , -- , 类型转换<br/>接下来是二元算术运算符* , / , % , + , - , 字符串连接符.<br/>再接下来是二元位运算符 << , >><br/>再接下来是比较操作符符< , > , <= , >= , == , !=(<>) , === , !==<br/>再接下来是位运算符和逻辑运算符& , ^ , | , && , ||<br/>再接下来是三目运算符?:<br/>再接下来是函数调用<br/>再接下来是赋值操作符= , += , -= , *= , /= , .= , %= , &= , |= , ^= , ~= , <<= , >>=<br/>再接下来是and , xor , or，（这个我比较郁闷的，书的前面写了and和&&，or和||只是表达形式不一样，但是这里很明显优先级是不一样）<br/>最后是一个列表分隔符，"}
	]
}